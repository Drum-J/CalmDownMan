spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: false
  cloud:
    aws:
      region: ${AWS_REGION}
      s3:
        bucket: ${AWS_S3_BUCKET}
        access-key: ${AWS_S3_ACCESS_KEY}
        secret-key: ${AWS_S3_SECRET_KEY}
        prefix: ${AWS_S3_PREFIX}



jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION}
  issuer: ${JWT_ISSUER}

logging:
  level:
    org.hibernate.orm.connections.pooling: warn
  file:
    name: /home/ec2-user/monitoring/logs/calmdownman.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  logback:
    rollingpolicy:
      file-name-pattern: "/home/ec2-user/monitoring/logs/calmdownman.%d{yyyy-MM-dd}.%i.log.gz"
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 1GB

management:
  server:
    port: ${MANAGEMENT_SERVER_PORT}
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS}
  endpoint:
    health:
      show-details: always
      cache:
        time-to-live: 10s #health 엔드포인트 캐싱
    metrics:
      cache:
        time-to-live: 30s #metrics 엔드포인트 캐싱
    prometheus:
      access: read_only
  metrics:
    tags:
      application: CalmDownMan

custom:
  monitoring:
    username: ${MONITORING_USERNAME}
    password: ${MONITORING_PASSWORD}
    role: ${MONITORING_ROLE}