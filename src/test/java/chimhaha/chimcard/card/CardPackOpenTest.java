package chimhaha.chimcard.card;

import chimhaha.chimcard.card.repository.CardRepository;
import chimhaha.chimcard.card.repository.CardSeasonRepository;
import chimhaha.chimcard.entity.Card;
import chimhaha.chimcard.entity.CardSeason;
import chimhaha.chimcard.entity.Grade;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.stream.Collectors;

@SpringBootTest
public class CardPackOpenTest {

    @Autowired CardSeasonRepository cardSeasonRepository;
    @Autowired CardRepository cardRepository;

    @Test
    void cardPackOpen() throws Exception {
        //given
        List<Card> drawnCards = new ArrayList<>();
        Random random = new Random();

        CardSeason cardSeason = cardSeasonRepository.findById(1L)
                .orElseThrow(() -> new IllegalArgumentException("해당 시즌 카드팩은 존재하지 않습니다."));

        //when
        // 1. 해당 시즌의 모든 카드를 등급별로 분류
        Map<Grade, List<Card>> map = cardRepository.findByCardSeason(cardSeason)
                .stream().collect(Collectors.groupingBy(Card::getGrade));

        //then
        // 2. 3장의 카드를 뽑음
        for (int i = 0; i < 3; i++) {
            Card drawnCard = drawCardBySeason(cardSeason, map, random);
            drawnCards.add(drawnCard);
        }

        System.out.println(drawnCards);
    }

    private Card drawCardBySeason(CardSeason cardSeason, Map<Grade, List<Card>> map, Random random) {
        return null;
    }
}
